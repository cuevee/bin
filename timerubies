#!/usr/bin/env ruby
# Run a script and time its output under various ruby implementations

# Don't use any rubies that aren't in the path
rubies = %w(ruby ruby1.9 jruby rbx tinyrb).select {|ruby| ENV["PATH"].split(/:/).map {|p| File.join(p, ruby) }.any? {|f| File.exists? f}}

longest_label = rubies.map {|n| n.size }.max

times = { }

rubies.each do |ruby|
  puts "timerubies: Timing script #{ARGV[0]} under #{ruby}..."
  start = Time.now.to_f
  system("#{ruby} #{ARGV * ' '}")
  stop = Time.now.to_f
  times[ruby] = $?.exitstatus ? (stop - start) : false
end

sec_digits = times.map {|k,v| v ? (Math.log(v)/Math.log(10)).ceil : 0}.max

puts '# ' + '-' * 70
rubies.each do |ruby|
  time = times[ruby] ? ("%#{sec_digits+3}.3fs" % times[ruby]) : "-.---s (DNF)"
  puts "# %-#{longest_label}s: %s" % [ruby, time]
end

