#!/usr/bin/env ruby
#
# Set the current project, so you can auto cd to that folder when you
# open a new terminal. Also sets up some handy aliases to jump into
# the current project's databases: if the project folder has a
# config/database.yml file in it, then for each environment defined
# inside, a db* alias (e.g. db_development, db_test) will be created.
# (Currently only supports mysql and psql.)
#
# set_current_project [<path>]
#
# If path is omitted, uses current folder.
#
# Idea originally taken from @gilesgoatboy on Twitter:
#
# "protip: during intense projects, auto cd in to project dir via
# .profile - just more relaxing, that way"
# (http://twitter.com/#!/gilesgoatboy/status/115842631468187648)
#
# This will set a ./current_project file in your home folder and
# export CURRENT_PROJECT into your environment. With the appropriate
# code in your profile, this will automatically cd you into the
# project folder as soon as you login.
#
# Add this to the end of your .profile or
# .bashrc:
#
# if [[ -s ~/.current_project ]] ; then
#     source ~/.current_project
# fi
#
# Notes:
#
# * You can clear the current project by deleting the file, or running
#   unset_current_project (which just deletes the file)
#
# * I think aliases like db_development are cleaner and easier to read
#   than aliases like dbdevelopment, but dbd<TAB> is a LOT easier to
#   type, so that's why.
#
# * The config reader should probably read the username and password
#   from tho config/database.yml file. Yeah. It should totally do
#   that. It doesn't, though.
#

# TODO: This sets an alias named "cdp" to cd into the current project
# folder. I keep a .nav file full of aliases, however; and ideally I'd
# like to specify something like "set_current_project --nav cdxyz" and
# have this script add "alias 'cdxyz'='cd this/project/folder'" to the
# .nav file. It should also check the file for collisions and abort,
# and/or allow a -f option to force overwriting the nav.
target = ARGV[0] || Dir.pwd

# if [ $# -lt 1 ]; then
#   TARGET=`pwd`
# else
#   TARGET=$*
# fi
require 'pp'

aliases = []
config_file = File.join(target, 'config/database.yml')
if File.exists? config_file
  require 'yaml'
  # Don't use load_file, Syck barfs when the yaml file lacks \n at EOF
  config = YAML.load(File.read(config_file) + "\n")
  config.each do |name, env|
    next unless env.key?("database")
    aliases << case env["adapter"].strip
               when "mysql", "mysql2"
                 "alias 'db#{name}'='mysql -D \"#{env['database'].strip}\"'"
               when "postgresql"
                 "alias 'db#{name}'='psql \"#{env['database'].strip}\"'"
               end
  end
end

File.open(File.expand_path("~/.current_project"), "w") do |file|
  file.puts "CURRENT_PROJECT=\"#{target}\""
  file.puts 'cd "$CURRENT_PROJECT"'
  file.puts
  file.puts "# Aliases:"
  file.puts %{alias 'cdp'="cd \\"$CURRENT_PROJECT\\""}
  file.puts aliases
end

puts "Current project has been set to #{target}. You will automatically cd to this folder on login."
